"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("../types");
class DummyNode {
    get childElementCount() {
        throw new Error('Property not implemented.');
    }
    get children() {
        throw new Error('Property not implemented.');
    }
    get firstElementChild() {
        throw new Error('Property not implemented.');
    }
    get lastElementChild() {
        throw new Error('Property not implemented.');
    }
    append(..._nodes) {
        throw new Error('Method not implemented.');
    }
    prepend(..._nodes) {
        throw new Error('Method not implemented.');
    }
    querySelector(_selectors) {
        throw new Error('Method not implemented.');
    }
    querySelectorAll(_selectors) {
        throw new Error('Method not implemented.');
    }
    get baseURI() {
        throw new Error('Property not implemented.');
    }
    get isConnected() {
        throw new Error('Property not implemented.');
    }
    get parentElement() {
        throw new Error('Property not implemented.');
    }
    get textContent() {
        throw new Error('Property not implemented.');
    }
    appendChild(_newChild) {
        throw new Error('Method not implemented.');
    }
    cloneNode(_deep) {
        throw new Error('Method not implemented.');
    }
    compareDocumentPosition(_other) {
        throw new Error('Method not implemented.');
    }
    contains(_other) {
        throw new Error('Method not implemented.');
    }
    getRootNode(_options) {
        throw new Error('Method not implemented.');
    }
    hasChildNodes() {
        throw new Error('Method not implemented.');
    }
    insertBefore(_newChild, _refChild) {
        throw new Error('Method not implemented.');
    }
    isDefaultNamespace(_namespace) {
        throw new Error('Method not implemented.');
    }
    isEqualNode(_otherNode) {
        throw new Error('Method not implemented.');
    }
    isSameNode(_otherNode) {
        throw new Error('Method not implemented.');
    }
    lookupNamespaceURI(_prefix) {
        throw new Error('Method not implemented.');
    }
    lookupPrefix(_namespace) {
        throw new Error('Method not implemented.');
    }
    normalize() {
        throw new Error('Method not implemented.');
    }
    removeChild(_oldChild) {
        throw new Error('Method not implemented.');
    }
    replaceChild(_newChild, _oldChild) {
        throw new Error('Method not implemented.');
    }
    static get DOCUMENT_POSITION_CONTAINED_BY() {
        throw new Error('Property not implemented.');
    }
    static get DOCUMENT_POSITION_CONTAINS() {
        throw new Error('Property not implemented.');
    }
    static get DOCUMENT_POSITION_DISCONNECTED() {
        throw new Error('Property not implemented.');
    }
    static get DOCUMENT_POSITION_FOLLOWING() {
        throw new Error('Property not implemented.');
    }
    static get DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC() {
        throw new Error('Property not implemented.');
    }
    static get DOCUMENT_POSITION_PRECEDING() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_CONTAINED_BY() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_CONTAINS() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_DISCONNECTED() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_FOLLOWING() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC() {
        throw new Error('Property not implemented.');
    }
    get DOCUMENT_POSITION_PRECEDING() {
        throw new Error('Property not implemented.');
    }
    addEventListener(_type, _listener, _options) {
        throw new Error('Method not implemented.');
    }
    dispatchEvent(_event) {
        throw new Error('Method not implemented.');
    }
    removeEventListener(_type, _callback, _options) {
        throw new Error('Method not implemented.');
    }
    after(..._nodes) {
        throw new Error('Method not implemented.');
    }
    before(..._nodes) {
        throw new Error('Method not implemented.');
    }
    remove() {
        throw new Error('Method not implemented.');
    }
    replaceWith(..._nodes) {
        throw new Error('Method not implemented.');
    }
}
exports.DummyNode = DummyNode;
//# sourceMappingURL=dummy-node.js.map